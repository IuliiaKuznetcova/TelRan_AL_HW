import java.util.function.ToDoubleBiFunction;

public class Main {
    public static void main(String[] args) {

        //First level: вычислить сложность в лучшем и худшем случае


        //доп 1
        void method(int a, int b) {
            while (a != b) {                //a=b, выполнится одна операция, цикл не запустится, лучший случай О(1)
                if (a > b) {
                    a = a - b;
                } else {
                    b = b - a;              //a<b, линейеное вычисление, худший случай O(n)
                }
            }
        }


        //доп 2
        void method(int n) {
            for (int i = 0; i < n / 2; i++) {                   //  n/2
                for (int j = 1; j + n / 2 <= n; j++) {          //  n/2
                    for (int k = 1; k <= n; k = k * 2) {        //  log*2(n)
                        System.out.println("I am expert!");
                    }
                }
            }
        }


        // три цикла друг в друге дает худший случай O(n^3)
        // n/2 * n/2 * log*2(n), если отбросить константы, то останется n^2 * log*(n), итого лучший случай О(n2*log(n))



        //доп 3
        void method3(int n) {
            for (int i = 1; i <= n; i++) {
                for (int j = 1; j <= n; j = j + i) {
                    System.out.println("I am expert!");
                }
            }
        }

        // Кроме варинат цикл в цикле, что приводит к квадрату, других варинатов, кроме как O(n^2)

    }
}
